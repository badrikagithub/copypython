tuples
-------
1.	write a program to get 1234
    t = ('1', '2', '3', '4')
2.	Write a program to update the tuple
    t1 = (1, 2, 3, 4)
    t2 = (100, 200, 300)
    # o/p (1, 2, 3, 4, 100, 200, 300)
3.	How to create a tuple using range function

sets
-----
1.	Create a set of squares in the list
    nums = [1, 2, 3, 4, 5, 6, 1, 2, 3, 4]
2.	Write a Python program to create a set of length 6
3.	Write a program to find user input element in the given set
    set_ = { 23, 89, "hai", 99, 23, (1,)}
4.	Write a program to find user input element and remove it from the given set
    set_ = { 23, 89, "hai", 99, 23, (1,)}
5.	Write a program to find the elements which are present in list a but not in list b
    a = [1, 2, 3, 4, 5]
    b = [2, 3, 5, 7, 11]
6.	Write a Python program to find maximum and the minimum value in a set.
7.	Write a Python program to find the length of a set without using inbuilt functions
8.	Check if two lists have at-least one element common
9.	concatenate 2 strings without any common characters in the output string
    string1 = "car"
    string2 = "race car"
10.	Program to accept the strings which contains all vowels and add it to the new set

dictionary
-----------

1.	Write a program to get the below output
    sentence = "hello world welcome to python programming hi there"
    d = {'h': ['hello', 'hi'], 'w': ['world', 'welcome'], 't': ['to', 'there'], 'p': ['python', 'programming'] }

2.	Reverse the values in the dictionary if the value is of type String
d = {'a': 'hello', 'b': 100, 'c': 10.1, 'd': 'world'}

3.	Program to print the number of occurrences of characters in a String without using inbuilt functions.
s = 'helloworld'

4.	Program to print only the repeated characters and count of the same.

5.	Write a program to replace value present in nested dictionary.
d = {'a': 100, 'b': {'m': 'man', 'n': 'nose', 'o': 'ox', 'c': 'cat'}}
# Replace "nose" with "net"

6.	Write a program to count the number occurrences of each item in the list without using any inbuilt functions
names = ['apple', 'google', 'apple', 'yahoo', 'google', 'facebook', 'gmail', 'yahoo']

7.	Write a program to find most common words in a given list.
words = [
'look', 'into', 'my', 'eyes', 'look', 'into', 'my', 'eyes', 'the', 'eyes', 'the', 'eyes', 'the', 'eyes', 'not', 'around', 'the', 'eyes', "don't", 'look', 'around', 'the', 'eyes', 'look', 'into','my', 'eyes', "you're", 'under']

8.	Write a program to get all the duplicate items and the number of times the item is repeated in the list.
>>> names = ['apple', 'google', 'apple', 'yahoo', 'yahoo', 'facebook', 'apple', 'gmail', 'gmail', 'gmail', 'gmail']

9.	Write a program to map a product to a company and build a dictionary with company and list of products pair
>>> all_products = ['iPhone', 'Mac', 'Gmail', 'Maps', 'iWatch', 'Windows',
'iOS', 'Google Drive', 'One Drive']

>>> # Pre-defined products for different companies
>>> apple_products = {'iPhone', 'Mac', 'iWatch'}
>>> google_products = {'Gmail', 'Maps', 'Google Drive'}
>>> msft_products = {'Windows', 'One Drive'}

10.	Grouping Flowers and Animals in the below list
items = ['lotus-flower', 'lilly-flower', 'cat-animal', 'sunflower-flower', 'dog-animal']

11.	Grouping files with same extensions
files = ['apple.txt', 'yahoo.pdf', 'gmail.pdf', 'google.txt', 'amazon.pdf', 'facebook.txt', 'flipkart.pdf']

12.	Count number of words in a sentence in the form of dictionary. ignore special characters.
>>> sentence = "Hi there! How are you:) How are you doing today!"

13.	Grouping even and odd numbers
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# o/p should be {1: [1, 3, 5, 7, 9], 0: [2, 4, 6, 8, 10]}

14.	Write a program to get the indices of each item in the below list
names = ['apple', 'google', 'apple', 'yahoo', 'yahoo', 'google', 'gmail', 'gmail', 'gmail']
output should be - {'apple': [0, 2], 'google': [1, 5], 'yahoo': [3, 4], 'gmail': [6, 7, 8]}

Comprehensions
--------------
17.	Building a dict of word and length pair
words = "This is a bunch of words"

18.	Flipping keys and values of the dictionary using dict comprehension
d = {'a': 1, 'b': 2, 'c': 3}

19.	Counting the number of each character in a String
my_string = 'guido van rossum'

20.	Counting the number of each character in a String
sentence = "hello world welcome to python hello hi world welcome to python"

21.	Dictionary of character and ascii value pairs
s = 'abcABC'

22.	# Creating Dictionary of city and population pairs using Dict Comprehension
cities = ['Tokyo', 'Delhi', 'Shanghai', 'Sao Paulo', 'Mumbai' ]
population = ['38,001,000', '25,703,168', '23,740,778', '21,066,245', '21,042,538'
]
23.	Create a dictionary of dialcode and country from the following list
dial_codes = [
(86, 'China'),
(91, 'India'),
(1, 'United States'),
(62, 'Indonesia'),
(55, 'Brazil'),
(92, 'Pakistan'),
(880, 'Bangladesh'),
(234, 'Nigeria'),
(7, 'Russia'),
(81, 'Japan')
]

24.	Building a dictionary whose price value is more than 200
prices = { 'ACME': 45.23, 'AAPL': 612.78, 'IBM': 205.55, 'HPQ': 37.20, 'FB': 10.75 }

functions
---------
1.	A function takes variable number of positional arguments as input. How to check if the arguments that are passed are more than 5

2.	Write a function to print the below output.

# func("TRACXN", 0) # Should print RCN
# func("TRACXN", 1) # Should print TAX

3.	Write a function to check if the number is Prime
4.	Write a method that returns the last digit of an integer. For example, the call of get_last_digit(3572) should return 2.

5.	Make a function named tail that takes a sequence (like a list, string, or tuple) and a number n and returns the last n elements from the given sequence, as a list.

6.	Write function named is_perfect_square that accepts a number and returns True if it's a perfect square and False if it's not.

7.	Write a function which returns the sum of lengths of all the iterables
8.	Python function to check whether a number is Prime or not
9.	Python function to check if a given number is Fibonacci number?

Using comprehensions
10.	Write a function to build a list of prime numbers from 1-50.
11.	Reverse the item of a list if the item is of odd length string otherwise keep the item as is!.
names = ['apple', 'google', 'yahoo', 'facebook', 'yelp', 'flipkart', 'gmail', 'instagram', 'microsoft']

anonymous functions
-------------------
lambda()
1.	Write a Python program to create a lambda function that adds 15 to a given number passed
2.	lambda function to square and cube of any number
3.	create a lambda function that multiplies 2 arguments
4.	Program to add 2 numbers
5.	Program to solve the expression a ** 2 + b ** 2 + 2 * a * b
6.	Program to solve the expression 2*a + 3*b + 4*c
7.	Program to return last element of any sequence
8.	Program to check if the numebr is even or odd
9.	Program to check if a string is palindrome or not
10.	Write a Python program to convert negative number to positive
11.	Check if a character is present in a string or not (list of strings)

filter()
1.	Program to print only even numbers in the range 1-50
2.	Program to print only odd numbers in the range 1-50
3.	Build a list with only even length string using filter func
    names = ['apple', 'google', 'yahoo', 'facebook', 'yelp', 'flipkart', 'gmail', 'instagram', 'microsoft']
4.	Returns the string if the string is starting from vowel character
    names = ['laura', 'steve', 'bill', 'james', 'bob', 'greig', 'scott', 'alex', 'ive']
5.	Program to return only positive values in the list
    numbers = [-2, -1, 0, 1, 2]
6.	Program to print prime numbers from 1-50
7.	Program to extract only negative numbers from the list

map()
1.	Write a Python program to square and cube every number in a given list of integers.
2.	Write a Python program to find if a given string starts with a given character.
3.	Write a Python program to convert negative numbers in a given list to positive numbers.
4.	Write a python program to return a list of elements raised to the power of their indices
5.	Write a Python program to calculate the sum of the positive and negative numbers of a given list.


file handling
--------------
1.	Write a program to count the number of white spaces in a file.
2.	Write a program to count the number of occurrences of each word in a file.
3.	Write a program to count the number of occurrences of vowels in a file.
4.	Write a program count the occurrence of a particular word in the file
5.	Write a program to count the number of commented lines in a text file
6.	Get only those lines which has TRACE.
7.	Write a program to count the number of words in the file
8.	Write a program to print only even lines in the file

Basics
------

1.	Write program to swap two numbers without using 3rd variable.
2.	What is the output of the following
    a = [1, 2, 3]
    b = [4, 5, 6]
    print([a, b])
    print((a, b))

3.	Find all max numbers from the below list
>>> numbers = [1, 2, 3, 0, 4, 3, 2, 4, 2, 1, 0, 4]

4.	Find the range from the following string
>>> sentence = '0-0, 4-8, 20-20, 43-45'
>>> # Output Should be [0, 4, 5, 6, 7, 8, 20, 43, 44, 45]

5. sum of first 3 largest numbers and sum of first 3 minimum numbers
numbers = [10, 15, 20, 25, 30, 35, 40, 15, 15]

6.	Write a program to print "Bangalore" 10 times without using "for" loop





